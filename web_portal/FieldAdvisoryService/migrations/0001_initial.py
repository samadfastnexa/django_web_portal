# Generated by Django 5.2.4 on 2025-08-06 11:08

import FieldAdvisoryService.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('email', models.EmailField(max_length=254, validators=[FieldAdvisoryService.validators.email_validator])),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('min_farmers_required', models.PositiveIntegerField(default=5)),
                ('confirmed_attendees', models.PositiveIntegerField(default=0)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fas_meetings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='FieldAdvisoryService.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cnic_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^\\d{13}$', message='CNIC must be exactly 13 digits')])),
                ('email', models.EmailField(max_length=254, validators=[FieldAdvisoryService.validators.email_validator])),
                ('contact_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', message='Enter a valid international phone number.')])),
                ('address', models.TextField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cnic_front_image', models.ImageField(default='dealers/cnic_front/default.jpg', upload_to='dealers/cnic_front/', validators=[FieldAdvisoryService.validators.validate_image])),
                ('cnic_back_image', models.ImageField(default='dealers/cnic_back/default.jpg', upload_to='dealers/cnic_back/', validators=[FieldAdvisoryService.validators.validate_image])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dealers', to='FieldAdvisoryService.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FieldAdvisoryService.region')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('entertained', 'Entertained'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FieldAdvisoryService.dealer')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FieldAdvisoryService.meetingschedule')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='sales_order_attachments/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='FieldAdvisoryService.salesorder')),
            ],
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('email', models.EmailField(max_length=254, validators=[FieldAdvisoryService.validators.email_validator])),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dealer',
            name='territory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FieldAdvisoryService.territory'),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='FieldAdvisoryService.region')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='territory',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='FieldAdvisoryService.zone'),
        ),
        migrations.CreateModel(
            name='DealerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=100)),
                ('business_name', models.CharField(max_length=150)),
                ('contact_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', message='Enter a valid international phone number.')])),
                ('address', models.TextField(blank=True)),
                ('cnic_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^\\d{13}$', message='CNIC must be exactly 13 digits')])),
                ('cnic_front', models.ImageField(upload_to='dealer_requests/cnic_front/', validators=[FieldAdvisoryService.validators.validate_image])),
                ('cnic_back', models.ImageField(upload_to='dealer_requests/cnic_back/', validators=[FieldAdvisoryService.validators.validate_image])),
                ('govt_license_number', models.CharField(max_length=50)),
                ('license_expiry', models.DateField()),
                ('reason', models.TextField(help_text='Reason for requesting new dealer')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('filer_status', models.CharField(choices=[('filer', 'Filer'), ('non_filer', 'Non-Filer')], max_length=10)),
                ('minimum_investment', models.PositiveIntegerField(help_text='Minimum should be 5 lakh')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FieldAdvisoryService.company')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dealer_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dealer_approvals', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FieldAdvisoryService.region')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FieldAdvisoryService.territory')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FieldAdvisoryService.zone')),
            ],
            options={
                'verbose_name': 'Dealer Request',
                'verbose_name_plural': 'Dealer Requests',
                'permissions': [('approve_dealer_request', 'Can approve or reject dealer requests')],
            },
        ),
        migrations.AddField(
            model_name='dealer',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FieldAdvisoryService.zone'),
        ),
    ]
